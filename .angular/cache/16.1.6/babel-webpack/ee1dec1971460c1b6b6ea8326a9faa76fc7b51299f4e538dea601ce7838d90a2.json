{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { of, switchMap } from 'rxjs';\nimport emailjs from 'emailjs-com';\nexport let ProductDetailComponent = class ProductDetailComponent {\n  constructor(activedRoute, productSvc, cartService, http) {\n    this.activedRoute = activedRoute;\n    this.productSvc = productSvc;\n    this.cartService = cartService;\n    this.http = http;\n    this.product = null;\n    this.showForm = false;\n  }\n  ngOnInit() {\n    this.activedRoute.paramMap.pipe(switchMap(paramMap => {\n      const productId = paramMap.get('productId');\n      if (productId) {\n        console.log(productId);\n        return this.productSvc.getProduct(productId);\n      }\n      return of(null);\n    })).subscribe({\n      next: product => {\n        this.product = product;\n      }\n    });\n  }\n  BookNow(item) {\n    if (this.showForm === false) {\n      this.showForm = true;\n    } else {\n      this.showForm = false;\n    }\n  }\n  sendEmail() {\n    this.showForm = false;\n    emailjs.send('service_a6f8v18', 'template_s1lc4fh', {\n      to_email: 'babumishra7898@gmail.com',\n      message: 'Hello, this is a test email sent from Angular!'\n    }, 'E3LKiGMaqM7wCO6xC').then(response => {\n      console.log('Email sent successfully:', response);\n      // Handle success, e.g., show a success message to the user\n    }, error => {\n      console.error('Email sending error:', error);\n      // Handle error, e.g., show an error message to the user\n    });\n  }\n};\n\nProductDetailComponent = __decorate([Component({\n  selector: 'app-product-detail',\n  templateUrl: './product-detail.component.html',\n  styleUrls: ['./product-detail.component.css']\n})], ProductDetailComponent);","map":{"version":3,"names":["Component","of","switchMap","emailjs","ProductDetailComponent","constructor","activedRoute","productSvc","cartService","http","product","showForm","ngOnInit","paramMap","pipe","productId","get","console","log","getProduct","subscribe","next","BookNow","item","sendEmail","send","to_email","message","then","response","error","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/ashishkloudspot/Downloads/Shopping_Cart/src/app/product/components/product-detail/product-detail.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { ProductService } from '../../product.service';\nimport { Product } from 'src/app/model/product';\nimport { of, switchMap } from 'rxjs';\nimport { CartService } from 'src/app/cart/cart.service';\nimport { HttpClient } from '@angular/common/http';\nimport emailjs from 'emailjs-com';\n\n@Component({\n  selector: 'app-product-detail',\n  templateUrl: './product-detail.component.html',\n  styleUrls: ['./product-detail.component.css']\n})\nexport class ProductDetailComponent {\n  product: Product | null = null;\n  showForm:boolean=false;\n  constructor(private activedRoute: ActivatedRoute, private productSvc: ProductService,private cartService: CartService,private http: HttpClient) { }\n\n  ngOnInit(){\n\n    this.activedRoute.paramMap\n      .pipe(\n        switchMap((paramMap: ParamMap) => {\n          const productId = paramMap.get('productId');\n         \n          if(productId){\n            console.log(productId);\n            return this.productSvc.getProduct(productId);\n          }\n          return of(null);         \n        })\n      )\n      .subscribe({\n        next: (product) => {\n          this.product = product;\n        }\n      })\n  }\n BookNow(item:any)\n {\n  if(this.showForm===false)\n  {\n   this.showForm=true;\n  }\n  else\n  {\n    this.showForm=false;\n  }\n }\n sendEmail()\n {\n  this.showForm=false;\n\n  emailjs.send('service_a6f8v18', 'template_s1lc4fh', {\n    to_email: 'babumishra7898@gmail.com', // Replace with recipient's email\n    message: 'Hello, this is a test email sent from Angular!'\n  }, 'E3LKiGMaqM7wCO6xC')\n  .then((response) => {\n    console.log('Email sent successfully:', response);\n    // Handle success, e.g., show a success message to the user\n  }, (error) => {\n    console.error('Email sending error:', error);\n    // Handle error, e.g., show an error message to the user\n  });\n}\n }"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAIzC,SAASC,EAAE,EAAEC,SAAS,QAAQ,MAAM;AAGpC,OAAOC,OAAO,MAAM,aAAa;AAO1B,WAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAGjCC,YAAoBC,YAA4B,EAAUC,UAA0B,EAASC,WAAwB,EAASC,IAAgB;IAA1H,KAAAH,YAAY,GAAZA,YAAY;IAA0B,KAAAC,UAAU,GAAVA,UAAU;IAAyB,KAAAC,WAAW,GAAXA,WAAW;IAAsB,KAAAC,IAAI,GAAJA,IAAI;IAFlI,KAAAC,OAAO,GAAmB,IAAI;IAC9B,KAAAC,QAAQ,GAAS,KAAK;EAC4H;EAElJC,QAAQA,CAAA;IAEN,IAAI,CAACN,YAAY,CAACO,QAAQ,CACvBC,IAAI,CACHZ,SAAS,CAAEW,QAAkB,IAAI;MAC/B,MAAME,SAAS,GAAGF,QAAQ,CAACG,GAAG,CAAC,WAAW,CAAC;MAE3C,IAAGD,SAAS,EAAC;QACXE,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;QACtB,OAAO,IAAI,CAACR,UAAU,CAACY,UAAU,CAACJ,SAAS,CAAC;;MAE9C,OAAOd,EAAE,CAAC,IAAI,CAAC;IACjB,CAAC,CAAC,CACH,CACAmB,SAAS,CAAC;MACTC,IAAI,EAAGX,OAAO,IAAI;QAChB,IAAI,CAACA,OAAO,GAAGA,OAAO;MACxB;KACD,CAAC;EACN;EACDY,OAAOA,CAACC,IAAQ;IAEf,IAAG,IAAI,CAACZ,QAAQ,KAAG,KAAK,EACxB;MACC,IAAI,CAACA,QAAQ,GAAC,IAAI;KAClB,MAED;MACE,IAAI,CAACA,QAAQ,GAAC,KAAK;;EAEtB;EACAa,SAASA,CAAA;IAER,IAAI,CAACb,QAAQ,GAAC,KAAK;IAEnBR,OAAO,CAACsB,IAAI,CAAC,iBAAiB,EAAE,kBAAkB,EAAE;MAClDC,QAAQ,EAAE,0BAA0B;MACpCC,OAAO,EAAE;KACV,EAAE,mBAAmB,CAAC,CACtBC,IAAI,CAAEC,QAAQ,IAAI;MACjBZ,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEW,QAAQ,CAAC;MACjD;IACF,CAAC,EAAGC,KAAK,IAAI;MACXb,OAAO,CAACa,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C;IACF,CAAC,CAAC;EACJ;CACE;;AApDW1B,sBAAsB,GAAA2B,UAAA,EALlC/B,SAAS,CAAC;EACTgC,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,C,EACW9B,sBAAsB,CAoDjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}