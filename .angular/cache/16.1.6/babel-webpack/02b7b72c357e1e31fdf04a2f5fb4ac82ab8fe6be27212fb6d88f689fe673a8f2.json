{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let HotelListComponent = class HotelListComponent {\n  constructor(productService, cartService) {\n    this.productService = productService;\n    this.cartService = cartService;\n    this.hotels = [];\n    this.filteredHotels = [];\n    this.filters = {};\n    this.minPrice = 0;\n    this.maxPrice = 0;\n    this.maxRating = 0;\n    this.minRating = 0;\n    this.hasLounge = false;\n    this.hasParking = false;\n    this.location = '';\n    // apiData: ApiResponse | null = null;\n    this.isLoading = true;\n  }\n  ngOnInit() {\n    this.hotels = this.productService.getProducts();\n    this.productService.getApiData().subscribe(hotels => {\n      this.hotels = hotels;\n      this.filteredHotels = hotels;\n    });\n    // this.filteredProduct=[...this.products];\n    // this.getFilteredHotels(this.products);\n  }\n\n  onAddToCart(hotel) {\n    this.cartService.addToCart(hotel);\n  }\n  getFilteredHotels(hotel) {\n    // this.productService.getFilteredHotels(this.filters).subscribe(\n    //   (data: any[]) => {\n    //     console.log(\"hello\")\n    //     this.hotels = data;\n    //     console.log(this.minPrice);\n    //   },\n    //   (error: any) => {\n    //     console.error('Error fetching hotels', error);\n    //   }\n    // );\n    console.log(this.filteredHotels);\n    this.filteredHotels = this.hotels.filter(hotel => hotel.price >= this.minPrice && hotel.price <= this.maxPrice && hotel.rating >= this.minRating && hotel.rating <= this.maxRating && hotel.type === this.type && (this.location === '' || hotel.location.toLowerCase().includes(this.location.toLowerCase())));\n  }\n};\nHotelListComponent = __decorate([Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})], HotelListComponent);","map":{"version":3,"names":["Component","HotelListComponent","constructor","productService","cartService","hotels","filteredHotels","filters","minPrice","maxPrice","maxRating","minRating","hasLounge","hasParking","location","isLoading","ngOnInit","getProducts","getApiData","subscribe","onAddToCart","hotel","addToCart","getFilteredHotels","console","log","filter","price","rating","type","toLowerCase","includes","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/ashishkloudspot/Downloads/Shopping_Cart/src/app/product/components/product-list/product-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Hotel } from 'src/app/model/product';\nimport { ProductService } from '../../product.service';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class HotelListComponent implements OnInit{\n  hotels: Hotel[] = [];\n  filteredHotels:Hotel[]=[];\n  filters:any={};\nminPrice=0;\nmaxPrice=0;\nmaxRating=0;\nminRating=0;\nhasLounge=false;\nhasParking=false;\nlocation='';\ntype:any;\n\n\n\n  constructor(\n    private productService: ProductService,\n    private cartService: CartService) { }\n    // apiData: ApiResponse | null = null;\n    isLoading = true;\n\n  ngOnInit(): void {\n    this.hotels = this.productService.getProducts();\n    this.productService.getApiData().subscribe(\n      (hotels)=>{\n        this.hotels= hotels\n        this.filteredHotels=hotels;\n      }\n    );\n    // this.filteredProduct=[...this.products];\n    \n    // this.getFilteredHotels(this.products);\n  }\n  onAddToCart(hotel: Hotel): void {\n    this.cartService.addToCart(hotel);\n  }\n\n  getFilteredHotels(hotel:any):void {\n    // this.productService.getFilteredHotels(this.filters).subscribe(\n    //   (data: any[]) => {\n    //     console.log(\"hello\")\n    //     this.hotels = data;\n    //     console.log(this.minPrice);\n    //   },\n    //   (error: any) => {\n    //     console.error('Error fetching hotels', error);\n    //   }\n    // );\n    console.log(this.filteredHotels);\n    this.filteredHotels = this.hotels.filter(hotel=>hotel.price>=this.minPrice&&\n      hotel.price <= this.maxPrice&&hotel.rating>=this.minRating&&hotel.rating<=this.maxRating&&hotel.type===this.type&&\n      (this.location === '' || hotel.location.toLowerCase().includes(this.location.toLowerCase()))\n      \n    );\n  }\n\n\n\n  }"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAe7BC,YACUC,cAA8B,EAC9BC,WAAwB;IADxB,KAAAD,cAAc,GAAdA,cAAc;IACd,KAAAC,WAAW,GAAXA,WAAW;IAhBrB,KAAAC,MAAM,GAAY,EAAE;IACpB,KAAAC,cAAc,GAAS,EAAE;IACzB,KAAAC,OAAO,GAAK,EAAE;IAChB,KAAAC,QAAQ,GAAC,CAAC;IACV,KAAAC,QAAQ,GAAC,CAAC;IACV,KAAAC,SAAS,GAAC,CAAC;IACX,KAAAC,SAAS,GAAC,CAAC;IACX,KAAAC,SAAS,GAAC,KAAK;IACf,KAAAC,UAAU,GAAC,KAAK;IAChB,KAAAC,QAAQ,GAAC,EAAE;IAQP;IACA,KAAAC,SAAS,GAAG,IAAI;EAFoB;EAItCC,QAAQA,CAAA;IACN,IAAI,CAACX,MAAM,GAAG,IAAI,CAACF,cAAc,CAACc,WAAW,EAAE;IAC/C,IAAI,CAACd,cAAc,CAACe,UAAU,EAAE,CAACC,SAAS,CACvCd,MAAM,IAAG;MACR,IAAI,CAACA,MAAM,GAAEA,MAAM;MACnB,IAAI,CAACC,cAAc,GAACD,MAAM;IAC5B,CAAC,CACF;IACD;IAEA;EACF;;EACAe,WAAWA,CAACC,KAAY;IACtB,IAAI,CAACjB,WAAW,CAACkB,SAAS,CAACD,KAAK,CAAC;EACnC;EAEAE,iBAAiBA,CAACF,KAAS;IACzB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAG,OAAO,CAACC,GAAG,CAAC,IAAI,CAACnB,cAAc,CAAC;IAChC,IAAI,CAACA,cAAc,GAAG,IAAI,CAACD,MAAM,CAACqB,MAAM,CAACL,KAAK,IAAEA,KAAK,CAACM,KAAK,IAAE,IAAI,CAACnB,QAAQ,IACxEa,KAAK,CAACM,KAAK,IAAI,IAAI,CAAClB,QAAQ,IAAEY,KAAK,CAACO,MAAM,IAAE,IAAI,CAACjB,SAAS,IAAEU,KAAK,CAACO,MAAM,IAAE,IAAI,CAAClB,SAAS,IAAEW,KAAK,CAACQ,IAAI,KAAG,IAAI,CAACA,IAAI,KAC/G,IAAI,CAACf,QAAQ,KAAK,EAAE,IAAIO,KAAK,CAACP,QAAQ,CAACgB,WAAW,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACjB,QAAQ,CAACgB,WAAW,EAAE,CAAC,CAAC,CAE7F;EACH;CAIC;AA1DU7B,kBAAkB,GAAA+B,UAAA,EAL9BhC,SAAS,CAAC;EACTiC,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACWlC,kBAAkB,CA0D5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}