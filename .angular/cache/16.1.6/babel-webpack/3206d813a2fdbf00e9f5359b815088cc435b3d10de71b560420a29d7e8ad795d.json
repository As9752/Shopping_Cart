{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  getFromStorage() {\n    const productsFromStorage = sessionStorage.getItem('products');\n    if (productsFromStorage) {\n      this.products = JSON.parse(productsFromStorage);\n    }\n    return this.products;\n  }\n  setToStorage() {\n    sessionStorage.setItem('products', JSON.stringify(this.products));\n  }\n  getProducts() {\n    return this.products;\n  }\n  // addProduct(product: Product): void {\n  //   this.products.push(product);\n  //   this.setToStorage();\n  // }\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8034/hotel-api/v1/getall';\n    this.counter = 1;\n    this.products = [];\n    this.productsList = [];\n    this.productsSubject$ = new BehaviorSubject(this.getFromStorage());\n    this.products$ = this.productsSubject$.asObservable();\n    this.viewBooking = [];\n  }\n  getApiData() {\n    return this.http.get(this.apiUrl);\n  }\n  addProduct(product) {\n    return this.http.post('http://localhost:8034/hotel-api/v1/hotels', product);\n  }\n  // getAllProducts() {\n  //   return this.getFromStorage()\n  // }\n  getProduct(id) {\n    return this.http.get(`http://localhost:8034/hotel-api/v1/hotels/${id}`);\n  }\n  getAllFromAPI() {\n    return this.http.get('http://localhost:8034/hotel-api/v1/getall');\n  }\n  getViewBookingData(item) {\n    this.viewBooking.push(item);\n    console.log(this.viewBooking);\n  }\n  getBookingInViewBooking() {\n    return this.viewBooking;\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BehaviorSubject","ProductService","getFromStorage","productsFromStorage","sessionStorage","getItem","products","JSON","parse","setToStorage","setItem","stringify","getProducts","constructor","http","apiUrl","counter","productsList","productsSubject$","products$","asObservable","viewBooking","getApiData","get","addProduct","product","post","getProduct","id","getAllFromAPI","getViewBookingData","item","push","console","log","getBookingInViewBooking","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/ashishkloudspot/Downloads/Shopping_Cart/src/app/product/product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {Product } from '../model/product';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n\n  private apiUrl = 'http://localhost:8034/hotel-api/v1/getall';\n\n  private counter = 1;\n  private products: Product[] = [];\n\n  private productsList: Product[] = [];\n  private productsSubject$: BehaviorSubject<Product[]> = new BehaviorSubject(this.getFromStorage());\n  products$ = this.productsSubject$.asObservable()\n\n  viewBooking:any=[];\n\n  getFromStorage(){\n    const productsFromStorage = sessionStorage.getItem('products');\n    if(productsFromStorage){\n      this.products = JSON.parse(productsFromStorage);      \n    }\n    return this.products\n  }\n\n  setToStorage(){\n    sessionStorage.setItem('products', JSON.stringify(this.products));\n  }\n  \n \n\n  \n\n  getProducts() {\n    return this.products;\n  }\n\n  // addProduct(product: Product): void {\n  //   this.products.push(product);\n  //   this.setToStorage();\n  // }\n\n  constructor(private http: HttpClient) {}\n\n  getApiData() {\n    return this.http.get<Product[]>(this.apiUrl);\n  }\n\n  addProduct(product: Product) {\n\n    return this.http.post('http://localhost:8034/hotel-api/v1/hotels', product)\n\n  }\n\n \n\n  // getAllProducts() {\n\n  //   return this.getFromStorage()\n\n  // }\n\n \n\n  getProduct(id: string) {\n\n    return this.http.get<Product>(`http://localhost:8034/hotel-api/v1/hotels/${id}`)\n\n  }\n\n \n\n  getAllFromAPI() {\n\n    return this.http.get<Product[]>('http://localhost:8034/hotel-api/v1/getall')\n\n  }\n  getViewBookingData(item:any)\n  {\n    this.viewBooking.push(item);\n    console.log(this.viewBooking);\n  }\n  getBookingInViewBooking()\n  {\n    return this.viewBooking;\n  }\n}"],"mappings":"AAEA,SAASA,eAAe,QAAoB,MAAM;;;AAMlD,OAAM,MAAOC,cAAc;EAazBC,cAAcA,CAAA;IACZ,MAAMC,mBAAmB,GAAGC,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC;IAC9D,IAAGF,mBAAmB,EAAC;MACrB,IAAI,CAACG,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACL,mBAAmB,CAAC;;IAEjD,OAAO,IAAI,CAACG,QAAQ;EACtB;EAEAG,YAAYA,CAAA;IACVL,cAAc,CAACM,OAAO,CAAC,UAAU,EAAEH,IAAI,CAACI,SAAS,CAAC,IAAI,CAACL,QAAQ,CAAC,CAAC;EACnE;EAMAM,WAAWA,CAAA;IACT,OAAO,IAAI,CAACN,QAAQ;EACtB;EAEA;EACA;EACA;EACA;EAEAO,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IApChB,KAAAC,MAAM,GAAG,2CAA2C;IAEpD,KAAAC,OAAO,GAAG,CAAC;IACX,KAAAV,QAAQ,GAAc,EAAE;IAExB,KAAAW,YAAY,GAAc,EAAE;IAC5B,KAAAC,gBAAgB,GAA+B,IAAIlB,eAAe,CAAC,IAAI,CAACE,cAAc,EAAE,CAAC;IACjG,KAAAiB,SAAS,GAAG,IAAI,CAACD,gBAAgB,CAACE,YAAY,EAAE;IAEhD,KAAAC,WAAW,GAAK,EAAE;EA2BqB;EAEvCC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAY,IAAI,CAACR,MAAM,CAAC;EAC9C;EAEAS,UAAUA,CAACC,OAAgB;IAEzB,OAAO,IAAI,CAACX,IAAI,CAACY,IAAI,CAAC,2CAA2C,EAAED,OAAO,CAAC;EAE7E;EAIA;EAEA;EAEA;EAIAE,UAAUA,CAACC,EAAU;IAEnB,OAAO,IAAI,CAACd,IAAI,CAACS,GAAG,CAAU,6CAA6CK,EAAE,EAAE,CAAC;EAElF;EAIAC,aAAaA,CAAA;IAEX,OAAO,IAAI,CAACf,IAAI,CAACS,GAAG,CAAY,2CAA2C,CAAC;EAE9E;EACAO,kBAAkBA,CAACC,IAAQ;IAEzB,IAAI,CAACV,WAAW,CAACW,IAAI,CAACD,IAAI,CAAC;IAC3BE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACb,WAAW,CAAC;EAC/B;EACAc,uBAAuBA,CAAA;IAErB,OAAO,IAAI,CAACd,WAAW;EACzB;;AAjFWpB,cAAc,C;mBAAdA,cAAc,EAAAmC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdtC,cAAc,C;SAAdA,cAAc;EAAAuC,OAAA,EAAdvC,cAAc,CAAAwC,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}