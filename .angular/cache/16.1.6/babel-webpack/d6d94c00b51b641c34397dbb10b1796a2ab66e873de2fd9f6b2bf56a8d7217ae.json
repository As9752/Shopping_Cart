{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class CartService {}\nCartService.ɵfac = function CartService_Factory(t) {\n  return new (t || CartService)();\n};\nCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CartService,\n  factory: CartService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["CartService","factory","ɵfac","providedIn"],"sources":["/Users/ashishkloudspot/Downloads/Shopping_Cart/src/app/cart/cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Product } from '../model/product';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport { Observable, map } from 'rxjs';\n\ntype Cart = {\n  total: number;\n\n  items: Product[];\n};\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartService {\n  // private cart: Product[] = [];\n  // private cartItemCount = new BehaviorSubject(0);\n\n  // addToCart(product: Product): void {\n  //   this.cart.push(product);\n  //   this.cartItemCount.next(this.cart.length);\n  // }\n\n  // getCartItemCount(): BehaviorSubject<number> {\n  //   return this.cartItemCount;\n  // }\n\n  // getFromStorage(){\n  //   const cartFromStorage = sessionStorage.getItem('cart');\n\n  //   if(cartFromStorage){\n  //     this.cart = JSON.parse(cartFromStorage);\n  //     return this.cart;\n  //   }\n  //   return this.cart;\n  // }\n\n  // constructor() { }\n\n  // setToStorage(){\n  //   sessionStorage.setItem('cart', JSON.stringify(this.cart));\n  // }\n\n  // cart: Cart = { total: 0, items: [] };\n\n  // cart$: BehaviorSubject<Cart> = new BehaviorSubject(this.getFromStorage());\n\n  // getCart(): Product[] {\n  //   return [...this.cart.items];\n  // }\n\n  // getFromStorage() {\n  //   const cartFromStorage = sessionStorage.getItem('cart');\n\n  //   if (cartFromStorage) {\n  //     this.cart = JSON.parse(cartFromStorage);\n\n  //     return this.cart;\n  //   }\n\n  //   return this.cart;\n  // }\n\n  // constructor() {}\n\n  // setToStorage() {\n  //   sessionStorage.setItem('cart', JSON.stringify(this.cart));\n  // }\n\n  // addToCart(product: Product) {\n  //   this.cart.items = [...this.cart.items, product];\n\n  //   this.cart.total = this.cart.items.reduce(\n  //     (acc, item) => item.price + acc,\n  //     0\n  //   );\n\n  //   this.setToStorage();\n\n  //   this.cart$.next(this.cart);\n  // }\n  // getCartItemCount(): Observable<number> {\n  //   return this.cart$.pipe(map((cart) => cart.total));\n  // }\n\n  // deleteItemFromCart(product:Product)\n  // {\n    \n  // }\n}\n"],"mappings":";AAaA,OAAM,MAAOA,WAAW;AAAXA,WAAW,C;mBAAXA,WAAW;AAAA;AAAXA,WAAW,C;SAAXA,WAAW;EAAAC,OAAA,EAAXD,WAAW,CAAAE,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}